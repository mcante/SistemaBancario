---------------
----AGENCIA
---------------

-- CREAR AGENCIA
DROP PROCEDURE CREAR_AGENCIA;

create or replace PROCEDURE CREAR_AGENCIA
(
	agNombre VARCHAR2,
	agDireccion VARCHAR2
)
IS
	existeNombre INTEGER := 0;
BEGIN
	-- Verificando que la agencia no exista
	SELECT COUNT(nombre) INTO existeNombre FROM AGENCIA WHERE nombre=agNombre;

	IF (existeNombre=0) THEN
		INSERT INTO AGENCIA (NOMBRE, DIRECCION) VALUES (agNombre, agDireccion);
		COMMIT;
        DBMS_OUTPUT.PUT_LINE('CREADO SATISFACTORIAMENTE');
	ELSE
    	ROLLBACK;
		DBMS_OUTPUT.PUT_LINE('LA AGENCIA YA EXISTE, VERIFICQUE LOS DATOS');
	END IF;
END CREAR_AGENCIA;

--PRUEBA
EXECUTE CREAR_AGENCIA('PROCERES','5TA. CALLE 20 AVE. ZONA 10, GUATEMALA');

--ACTUALIZACION DE AGENCIA
DROP PROCEDURE ACTUALIZAR_AGENCIA;

CREATE OR REPLACE PROCEDURE ACTUALIZAR_AGENCIA
(
    agId NUMBER,
    agNombre VARCHAR2,
    agDireccion VARCHAR2
)
IS
encontrado INTEGER :=0;
BEGIN
    SELECT COUNT(*)INTO encontrado FROM AGENCIA WHERE ID_AGENCIA=agId;
    
    IF (encontrado>0) THEN
        UPDATE AGENCIA SET NOMBRE=agNombre, DIRECCION=agDireccion WHERE ID_AGENCIA=agId;
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('AGENCIA ACTUALIZADA SATISFACTORIAMENTE');
    ELSE
    	ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('NO EXISTE LA AGENCIA');
    END IF;
END ACTUALIZAR_AGENCIA;

--PRUEBA
EXECUTE ACTUALIZAR_AGENCIA('12','TERMINAL 1','ZONA 4, GUATEMALA');


-- -------------------------------------------------------------------------
---------------
----CAJA
---------------

-- CREAR CAJA
DROP PROCEDURE CREAR_CAJA;

create or replace PROCEDURE CREAR_CAJA
(
	cajaAgencia VARCHAR2,
	cajaSaldo FLOAT
)
IS
	codAgencia INTEGER := 0;
BEGIN
	-- Verificando que la agencia no exista
	SELECT ID_AGENCIA INTO codAgencia FROM AGENCIA WHERE nombre=cajaAgencia;

	IF (codAgencia>0) THEN
		INSERT INTO CAJA (ID_AGENCIA,SALDO) VALUES (codAgencia, cajaSaldo);
        COMMIT;
		DBMS_OUTPUT.PUT_LINE('CAJA CREADA SATISFACTORIAMENTE');
    ELSE
    	ROLLBACK;
		DBMS_OUTPUT.PUT_LINE('LA AGENCIA NO EXISTE, VERIFICQUE LOS DATOS');
	END IF;
END CREAR_CAJA;

--PRUEBA
EXECUTE CREAR_CAJA('MARTI',3000.00);


--ACTUALIZACION DE CAJA
DROP PROCEDURE ACTUALIZAR_CAJA;

CREATE OR REPLACE PROCEDURE ACTUALIZAR_CAJA
(
    cajaId NUMBER,
    cajaAgencia VARCHAR2,
    cajaSaldo FLOAT
)
IS
codAgencia INTEGER :=0;
encontrado INTEGER :=0;
BEGIN
    SELECT COUNT(*)INTO encontrado FROM CAJA WHERE ID_CAJA=cajaId;
    IF (encontrado>0) THEN
        SELECT ID_AGENCIA INTO codAgencia FROM AGENCIA WHERE NOMBRE=cajaAgencia;
        UPDATE CAJA SET ID_AGENCIA=codAgencia, SALDO=cajaSaldo WHERE ID_CAJA=cajaId;
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('CAJA ACTUALIZADA SATISFACTORIAMENTE');
    ELSE
    	ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('NO EXISTE LA CAJA');
    END IF;
END ACTUALIZAR_CAJA;

--PRUEBA
EXECUTE ACTUALIZAR_CAJA('1','TERMINAL 1','50000');



-- -------------------------------------------------------------------------
---------------
----CAJERO
---------------

-- CREAR CAJERO
DROP PROCEDURE CREAR_CAJERO;

create or replace PROCEDURE CREAR_CAJERO
(
	cajaId NUMBER,
	dpiEmpleado NUMBER
)
IS
	existeCajero	INTEGER:=0;
	idEmpleado	INTEGER :=0;
BEGIN
	-- Verificando que el empleado exista
	SELECT ID_EMPLEAD INTO idEmpleado FROM EMPLEADO WHERE dpi=dpiEmpleado;

	IF (idEmpleado<>0) THEN
		SELECT COUNT(ID_CAJERO) INTO existeCajero FROM CAJERO WHERE id_empleado=idEmpleado AND id_caja=cajaId;
		IF(existeCajero=0) THEN
			INSERT INTO CAJERO (ID_CAJA, ID_EMPLEADO, FECHA) VALUES (cajaId, idEmpleado, SYSDATE);
			COMMIT;
        DBMS_OUTPUT.PUT_LINE('CAJERO CREADO SATISFACTORIAMENTE');
		ELSE
        	ROLLBACK;
			DBMS_OUTPUT.PUT_LINE('EL CAJERO YA EXISTE, VERIFIQUE LOS DATOS');
		END IF;
	ELSE
    	ROLLBACK;
		DBMS_OUTPUT.PUT_LINE('EL EMPLEADO NO EXISTE, VERIFIQUE EL DPI');
	END IF;
END CREAR_CAJERO;

--PRUEBA
EXECUTE CREAR_CAJERO('1','1790123400108');

--ACTUALIZACION DE CAJERO
DROP PROCEDURE ACTUALIZAR_CAJERO;

CREATE OR REPLACE PROCEDURE ACTUALIZAR_CAJERO
(
	cajeroId NUMBER,
	cajaId NUMBER,
	dpiEmpleado NUMBER
)
IS
	existeCajero	INTEGER:=0;
	idEmpleado	INTEGER :=0;
BEGIN
	-- Verificando que el empleado exista
	SELECT ID_EMPLEAD INTO idEmpleado FROM EMPLEADO WHERE dpi=dpiEmpleado;

	IF (idEmpleado<>0) THEN
		SELECT COUNT(ID_CAJERO) INTO existeCajero FROM CAJERO WHERE ID_CAJERO=cajeroId;
		IF(existeCajero>0) THEN
			UPDATE CAJERO SET ID_CAJA=cajaId, ID_EMPLEADO=idEmpleado WHERE ID_CAJERO=cajeroId
			COMMIT;
            DBMS_OUTPUT.PUT_LINE('CAJERO ACTUALIZACO SATISFACTORIAMENTE');
		ELSE
			ROLLBACK;
            DBMS_OUTPUT.PUT_LINE('EL CAJERO NO EXISTE, VERIFIQUE LOS DATOS');
		END IF;
	ELSE
		ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('EL EMPLEADO NO EXISTE, VERIFIQUE EL DPI');
	END IF;
END ACTUALIZAR_CAJERO;

--PRUEBA
EXECUTE ACTUALIZAR_CAJERO('1','1','1790123400108');